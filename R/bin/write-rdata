#!/usr/bin/env Rscript

#
# Load the DIPP data.
# Save as a phyloseq class in an RData file.
# Makes for quick loading later on.
#

library(optparse)

option_list <- c(make_option('--output', type='character', default='/dev/stdout'),
                 make_option('--unique', type='logical', default=FALSE, action='store_true'),
                 make_option('--rarefy', type='logical', default=FALSE, action='store_true'),
                 make_option('--otutable', type='character'),
                 make_option('--metadata', type='character'),
                 make_option('--taxonomies', type='character'),
                 make_option('--tree', type='character'))

parser <- OptionParser(option_list = option_list)

options <- parse_args(parser)

suppressMessages(suppressWarnings(source('./lib/load_dipp.R')))

dipp <- load.dipp(otu.table=options$otutable,
                  sam.data=options$metadata,
                  tax.table=options$taxonomies,
                  tree=options$tree)

cat("Before uniquification\n")
dipp

if (options$unique == TRUE) {
  library(plyr)
  meta <- data.frame(sam_data(dipp), check.names=F)

  # ddply drops rownames.
  meta$illumina_id <- rownames(meta)

  # get total number of reads
  meta$total_reads <- rowSums(otu_table(dipp))

  uniqued <- ddply(meta, ~sample_id, function(x) {
        # sort by total reads in descending order
        sorted <- x[with(x, order(-total_reads)),]
        sorted[1,]
  })

  # put back rownames.
  rownames(uniqued) <- uniqued$illumina_id
  dipp <- phyloseq(sam_data(uniqued), otu_table(dipp), tax_table(dipp))
}

cat("Before rarefaction\n")
dipp

if (options$rarefy == TRUE) dipp <- rarefy_even_depth(dipp, 10000)

cat("After rarefaction\n")
dipp

save(dipp, file=options$output)
