#!/usr/bin/env Rscript

library(optparse)

vars <- c('Gender',
          'vaginal_delivery',
          'breast_feeding',
          'DQA_03',
          'DQA_05',
          'DQB_02',
          'DQB_0201',
          'DQB_0301',
          'DQB_0302',
          'DQB_0303',
          'DQB_0501',
          'DQB_0604')

option_list <- c(make_option('--input', type='character', default='dipp-rf-uniq.RData'),
                 make_option('--rank', type='character', default='Species'),
                 make_option('--output', type='character', default='models.rdata'),
                 make_option('--bootstrap', default=F, action='store_true')
                 )

parser <- OptionParser(option_list = option_list)
options <- parse_args(parser)

library(phyloseq)
library(plyr)
library(ggplot2)
library(reshape2)
library(boot)
library(qvalue)
library(scales)

load(options$input)
dipp <- tax_glom(dipp, taxrank=options$rank)

taxa_names <- data.frame(tax_table(dipp))[,options$rank]
otus <- data.frame(otu_table(dipp), check.names=F)
colnames(otus) <- taxa_names

meta <- data.frame(sample_data(dipp))

otus$response <- meta$seroconverted
otus$age <- meta$age_at_sampling
otus$subject <- meta$dipp_person

# add extra variables
for (v in vars) otus[,v] <- meta[,v]

mdat <- melt(otus, c('response', 'age', 'subject', vars))

f1 <- as.formula(paste('value ~', paste(paste(vars, ':age', sep=''), collapse='+')))
f2 <- response ~ r:age

get_coeff <- function(dat) {
  mod0 <- glm(f1, data=dat)
  coef(mod0)
}

do_test <- function(dat) {
  mod0 <- glm(f1, data=dat)
  dat$r <- residuals(mod0)
  mod1 <- glm(f2, data=dat)
  anova(mod1, test='Chisq')[[5]][[2]]
}

glms <- ddply(mdat, ~variable, function(m) {
  cat('variable:', m$variable[1], '\n') 
  if (options$bootstrap) {
    boot(m, do_test, R=10, sim='parametric')$t0
  } else {
    do_test(m)
  }
})

glms$p.adjust <- p.adjust(glms$V1, method='BH')
glms$q.value <- qvalue(glms$V1)$qvalues

significant <- subset(glms, p.adjust < 0.001)

mdat.s <- subset(mdat, variable %in% significant$variable)

mdat.s$status <- 'Control'
mdat.s[mdat.s$response,]$status <- 'Progressor'

ggplot(mdat.s,
       aes(x=age,
           y=value,
           color=status,
           linetype=status)) +
geom_smooth(alpha=0.30) +
facet_grid(.~variable, scale='free_y') +
xlim(100, 600) +
scale_y_continuous(labels=percent) +
ggplot.theme +
scale_color_manual(values=c("#999999",
                           "#FFAB00"))

form <- as.formula(paste('response ~', paste(paste(significant$variable, ':age', sep=""), collapse=' + ')))
