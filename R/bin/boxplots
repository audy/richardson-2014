#!/usr/bin/env rscript

library(optparse)


option_list <- c(make_option('--input', type='character', default='/dev/stdin'),
                 make_option('--rank', type='character'),
                 make_option('--top', type='numeric', default=12),
                 make_option('--start', type='numeric'),
                 make_option('--stop', type='numeric'),
                 make_option('--output', type='character', default='Rplots.pdf')
                )


parser <- OptionParser(option_list = option_list)
options <- parse_args(parser)

library(phyloseq)
library(ggplot2)
library(plyr)
library(pander)

load(options$input)

subset1 <- subset_samples(dipp, age_at_sampling >= 0)
subset <- subset_samples(dipp, age_at_sampling <= 500)

glom <- tax_glom(subset, taxrank=options$rank)

df <- psmelt(glom)

# downsample per individual
# TODO create ddply formula dynamically...
downsampled <- ddply(df, ~dipp_person + Phylum, function(d) {
  avg <- median(d$Abundance)
  d <- d[1,]
  d$Abundance <- avg
  return(d)
})

# statistical tests...
tests <- ddply(downsampled, ~ Phylum, function(d) {
  c(pvalue=wilcox.test(Abundance ~ seroconverted, data=d, exact=FALSE)$p.value)
})

pander(tests)

source('./lib/ggplot_theme.R')

ggplot(downsampled,
       aes_string(x='seroconverted',
                  y='Abundance')) +
geom_boxplot() +
facet_wrap(~Phylum, scale='free_y') +
ggplot.theme
